Option Explicit

!INC Local Scripts.EAConstants-VBScript

Sub CreatePhaseHChangeRegisterDiagram()

    Repository.EnsureOutputVisible "Script"
    Session.Output "VBScript CREATE PHASE H CHANGE REGISTER DIAGRAM"
    Session.Output "==============================================="

    Dim i, tempModel

    ' Find root model "Model"
    Dim rootModel As EA.Package
    Set rootModel = Nothing
    For i = 0 To Repository.Models.Count - 1
        Set tempModel = Repository.Models.GetAt(i)
        If tempModel.Name = "Model" Then
            Set rootModel = tempModel
            Exit For
        End If
    Next
    If rootModel Is Nothing Then
        Session.Output "Error: Root model 'Model' not found.": Exit Sub
    End If

    ' Find "Architecture Development Method"
    Dim admPackage As EA.Package
    Set admPackage = findPackageByName(rootModel, "Architecture Development Method")
    If admPackage Is Nothing Then
        Session.Output "Error: Architecture Development Method package not found.": Exit Sub
    End If

    ' Find or create Phase H package
    Dim phaseHPackage As EA.Package
    Set phaseHPackage = findPackageByName(admPackage, "Phase H")
    If phaseHPackage Is Nothing Then
        Set phaseHPackage = admPackage.Packages.AddNew("Phase H", "Package")
        phaseHPackage.Update
        Session.Output "Created package: Phase H"
    End If

    ' Check/Create Change Register Diagram
    Dim regDiagram As EA.Diagram
    Set regDiagram = Nothing
    For i = 0 To phaseHPackage.Diagrams.Count - 1
        Dim diag As EA.Diagram
        Set diag = phaseHPackage.Diagrams.GetAt(i)
        If diag.Name = "Architecture Change Register" Then
            Set regDiagram = diag
            Exit For
        End If
    Next
    If regDiagram Is Nothing Then
        Set regDiagram = phaseHPackage.Diagrams.AddNew("Architecture Change Register", "Custom")
        regDiagram.Notes = "Central register for all architecture change requests, approvals, and tracking."
        regDiagram.Update
        Session.Output "Created diagram: Architecture Change Register"
    End If

    ' Define example change requests and statuses
    Dim elements(3), stereotypes(3), types(3), colors(3), sizes(3), notes(3), objs(3)
    elements(0) = "Change Request #2025-01": stereotypes(0) = "ChangeRequest": types(0) = "Requirement": colors(0) = RGB(255, 192, 0): sizes(0) = "l=100;r=300;t=100;b=50": notes(0) = "Add containerized security module to all micro data centers. Status: Approved. Priority: High."
    elements(1) = "Change Request #2025-02": stereotypes(1) = "ChangeRequest": types(1) = "Requirement": colors(1) = RGB(255, 0, 0): sizes(1) = "l=350;r=550;t=100;b=50": notes(1) = "Upgrade satellite firmware. Status: Under Review. Priority: Medium."
    elements(2) = "Change Request #2025-03": stereotypes(2) = "ChangeRequest": types(2) = "Requirement": colors(2) = RGB(112, 173, 71): sizes(2) = "l=600;r=800;t=100;b=50": notes(2) = "Retire legacy database APIs. Status: Rejected. Priority: Low."

    For i = 0 To 2
        Dim elem As EA.Element
        Set elem = phaseHPackage.Elements.AddNew(elements(i), types(i))
        elem.Stereotype = stereotypes(i)
        elem.Notes = notes(i)
        elem.Update
        Set objs(i) = elem
    Next

    Dim diagObjects As EA.Collection
    Set diagObjects = regDiagram.DiagramObjects
    For i = 0 To 2
        Dim diagObj As EA.DiagramObject
        Set diagObj = diagObjects.AddNew(sizes(i) & ";", "")
        diagObj.ElementID = objs(i).ElementID
        diagObj.BackgroundColor = colors(i)
        diagObj.Update
    Next

    Repository.RefreshModelView phaseHPackage.PackageID
    regDiagram.Update
    Repository.ReloadDiagram regDiagram.DiagramID

    Session.Output "Architecture Change Register Diagram created successfully under MODEL > Architecture Development Method > Phase H"
    Session.Output "Done!"

End Sub

Function findPackageByName(parentPackage, targetName)
    Dim i, pkg, found
    Set findPackageByName = Nothing
    For i = 0 To parentPackage.Packages.Count - 1
        Set pkg = parentPackage.Packages.GetAt(i)
        If pkg.Name = targetName Then
            Set findPackageByName = pkg
            Exit Function
        End If
        Set found = findPackageByName(pkg, targetName)
        If Not found Is Nothing Then
            Set findPackageByName = found
            Exit Function
        End If
    Next
End Function

CreatePhaseHChangeRegisterDiagram
